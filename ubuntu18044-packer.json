{
  "builders": [
    {
      "CPUs": 2,
      "RAM": 2048,
      "RAM_reserve_all": true,
      "boot_wait": "20s",
      "boot_command": [
        "<enter><wait><f6><wait><esc><wait>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs>",
        "/install/vmlinuz",
        " initrd=/install/initrd.gz",
        " priority=critical",
        " locale=en_US",
        " file=/media/preseed_server.cfg",
        "<enter>"
      ],
      "boot_order": "disk,cdrom",
      "cluster": "{{user `cluster`}}",
      "convert_to_template": "true",
      "datastore": "{{user `datastore`}}",
      "disk_controller_type": "pvscsi",
      "floppy_files": [
        "./http/preseed_server.cfg"
      ],
      "folder": "{{user `folder`}}",
      "guest_os_type": "ubuntu64Guest",
      "host": "{{user `host`}}",
      "insecure_connection": "true",
      "iso_checksum": "sha256:b9ef58cf3e7eec09d5bf15e050ad3dc2852728bfc314c9d75e6d772df176f8e1",
      "iso_urls": "http://cdimage.ubuntu.com/ubuntu-server/bionic/daily/current/bionic-server-amd64.iso",
      "network_adapters": [
        {
          "network": "{{user `network`}}",
          "network_card": "vmxnet3"
        }
      ],
      "password": "{{user `password`}}",
      "resource_pool": "{{user `resource_pool`}}",
      "ssh_password": "{{user `ssh_password`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "storage": [
        {
          "disk_size": 10737,
          "disk_thin_provisioned": true
        }
      ],
      "type": "vsphere-iso",
      "username": "{{user `username`}}",
      "vcenter_server": "{{user `vcenter_server`}}",
      "vm_name": "ubuntu18_4_packer_test"
    }
  ],
  "provisioners": [
    {
      "inline": [
        "echo 'template build - starting configuration by deploying base packages/applications'"
      ],
      "type": "shell"
    },
    {
      "execute_command": "echo '{{user `password`}}' | {{.Vars}} sudo -E -S bash '{{.Path}}'",
      "expect_disconnect": true,
      "pause_before": "10s",
      "scripts": [
        "scripts/packer_install_base_packages.sh",
        "scripts/packer_image_cleanup.sh"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "echo 'template build - start configuring ssh access'"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "mkdir -p {{user `image_home_dir`}}{{user `ssh_username`}}/.ssh"
      ],
      "type": "shell"
    },
    {
      "destination": "{{user `image_home_dir`}}{{user `ssh_username`}}/.ssh/authorized_keys",
      "source": "{{user `ssh_key_src_pub`}}",
      "type": "file"
    },
    {
      "inline": [
        "sudo chown -R {{user `ssh_username`}}:{{user `ssh_username`}} {{user `image_home_dir`}}{{user `ssh_username`}}",
        "sudo chmod go-w {{user `image_home_dir`}}{{user `ssh_username`}}/",
        "sudo chmod 700 {{user `image_home_dir`}}{{user `ssh_username`}}/.ssh",
        "sudo chmod 600 {{user `image_home_dir`}}{{user `ssh_username`}}/.ssh/authorized_keys"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "echo 'template build - test the image'"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "echo 'template build - disable ssh password access'"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo su root -c \"sed '/ChallengeResponseAuthentication/d' -i /etc/ssh/sshd_config | sudo bash\"",
        "sudo su root -c \"sed '/PasswordAuthentication/d' -i /etc/ssh/sshd_config | sudo bash\"",
        "sudo su root -c \"sed '/UsePAM/d' -i /etc/ssh/sshd_config | sudo bash\"",
        "sudo su root -c \"echo  >> /etc/ssh/sshd_config | sudo bash\"",
        "sudo su root -c \"echo 'ChallengeResponseAuthentication no' >> /etc/ssh/sshd_config | sudo bash\"",
        "sudo su root -c \"echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config | sudo bash\""
      ],
      "type": "shell"
    },
    {
      "inline": [
        "echo 'template build - complete'"
      ],
      "type": "shell"
    }
  ]
}
